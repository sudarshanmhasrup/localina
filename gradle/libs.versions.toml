[versions]
# Library and plugins versions
kotlin = "2.2.20"
androidGradlePlugin = "8.12.3"
composeMultiplatform = "1.9.1"
material3 = "1.9.0"
viewmodel = "2.9.5"
koin = "4.1.1"
mavenPublish = "0.34.0"

# library module's configuration and publishing information
library-group = "io.github.sudarshanmhasrup.localina"
library-artifactId = "localina"
library-version = "1.0.0-alpha"

# library module's android library package information
library-androidLibrary-namespace = "io.github.sudarshanmhasrup.localina"
library-androidLibrary-compileSdk = "36"
library-androidLibrary-minSdk = "21"

# wasm-app module's configuration information
wasmApp-group = "com.wasm.app"
wasmApp-version = "1.0.0"

# compose-app module's configuration information
composeApp-group = "com.compose.app"
composeApp-version = "1.0.0"
composeApp-packageOfResClass = "com.compose.app.resources"

# compose-app module's android library package information
composeApp-androidLibrary-namespace = "com.compose.app"
composeApp-androidLibrary-compileSdk = "36"
composeApp-androidLibrary-minSdk = "24"

[libraries]
compose-multiplatform-components-ui-tooling-preview = { module = "org.jetbrains.compose.components:components-ui-tooling-preview", version.ref = "composeMultiplatform" }
compose-multiplatform-ui-tooling-preview = { module = "org.jetbrains.compose.ui:ui-tooling-preview", version.ref = "composeMultiplatform" }
compose-multiplatform-ui-tooling = { module = "org.jetbrains.compose.ui:ui-tooling", version.ref = "composeMultiplatform" }
compose-multiplatform-resources = { module = "org.jetbrains.compose.components:components-resources", version.ref = "composeMultiplatform" }
compose-multiplatform-foundation = { module = "org.jetbrains.compose.foundation:foundation", version.ref = "composeMultiplatform" }
compose-multiplatform-material3 = { module = "org.jetbrains.compose.material3:material3", version.ref = "material3" }
compose-multiplatform-ui = { module = "org.jetbrains.compose.ui:ui", version.ref = "composeMultiplatform" }
compose-multiplatform-viewmodel = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-coviewmodmpose", version.ref = "viewmodel" }
lifecycle-runtime-compose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-runtime-compose", version.ref = "viewmodel" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koin" }
koin-compose-viewmodel = { module = "io.insert-koin:koin-compose-viewmodel", version.ref = "koin" }

[bundles]
koin-multiplatform = ["koin-core", "koin-compose", "koin-compose-viewmodel"]
koin-android = ["koin-core", "koin-android"]

[plugins]
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
android-kotlin-multiplatform-library = { id = "com.android.kotlin.multiplatform.library", version.ref = "androidGradlePlugin" }
compose-multiplatform = { id = "org.jetbrains.compose", version.ref = "composeMultiplatform" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
maven-publish = { id = "com.vanniktech.maven.publish", version.ref = "mavenPublish" }